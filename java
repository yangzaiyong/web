                                          管理系统之 权限
权限：
 1.权限表
 2.权限列表
 3.权限操作：
       1）权限列表就是超级管理员的所有权限--->不同层次管理员权限列表只显示自己当前权限列表。
       2）权限选择。选择权限后就保存到数据表中，并且与角色关联。

说明：只有超级管理员可以操作数据，系统开发的时候超级管理员权限定死了，不可更改。（将所有权限做成备份，跟换系统的时候，直接使用备份完成超级管理员权限开放）
角色：
 1.角色表
 2.角色列表：
 3.角色增加
 4.角色删除
 5.角色更改
角色可以自己定但是分两层。
列如：
   管理员：普通管理员  中级管理员   高级管理员（拥有超级管理员的权限）
   用户角色：普通会员  VIP会员  钻石会员  黄金会员
关联关系

用户---角色----权限

为了灵活使用权限管理，只有先建立角色，然后开始给角色赋予权限。

规则限制：
1.只有管理员可以进入管理系统，用户不能进入管理系统。
2.超级管理员除外，其它管理员不能修改权限列表和角色列表，在赋予角色权限的时候只需做用户与角色关联即可。
3.每个管理员只能给自己的下级赋予权限。
4.不同层次的管理员，对应给用户开启的权限也不一样。
例如：普通管理员只能够开通VIP用户权限，
      中级管理员，可以开通VIP+钻石会员权限，
      高级管理员，可以开通用户所有权限。
5.不同用户的使用功能会屏蔽。
6.管理员只要是后台功能操作。会员只要是前台功能操作。
7.会员升级问题：
1)自动升级：会员的目标达到了，可以自动升级会员，不需要人为操作。
2)人为操作升级。
关联关系：
1.用户和角色
一个用户一个角色，一个角色多个用户
多对一关系
2.角色和权限
一个角色多个权限，一个权限多个角色
多对多关系
3.管理员和会员
一个管理员多个会员，一个会员多个管理员。
多对多管理

知识点：
1.登录系统的时候根据账号权限显示界面。
2.建立角色的时候使用父子关系，用到树状结构。
3.功能屏蔽，HTML和JS结合使用。
4.数据库建表，级别从高到低开始。
----*角色数据库*------
  1)管理员表
超级管理员：0
高级管理员：1
中级管理员：2
普通管理员：3
字段：ID  名称   
      0    0
      1    1
      2    2
  2)会员表
黄金会员：10
钻石会员：11
 VIP会员：12
普通会员：13
字段：ID  名称   
      0    10
      1    11
      2    12

  3)会员和管理员关联表
字段：ID  管理员  会员   
      0    0       0
      1    0       1
      2    1       1
-----*权限*------
1)权限表
字段：ID  名称  
      1   ./baidu/ss.do
    
2)权限与会员
  权限与管理员
关联表
字段：ID  角色         权限   
      0    0        ./baidu/ss.do
      1    0        ./baidu/ss.do
      2    1        ./baidu/ss.do
-----*用户*----------
1)用户表
字段：ID  用户名  密码    角色    日期
      001 lisi    23233    12    2018-05-11
用户与角色关联表
字段：ID  用户  角色
      1    lisi  9
      2   wangwu 9 
表查询思路
用户可以操作什么功能问题：
用户-----角色----权限---操作功能
疑问：1.两张关联的表的字段中是否允许为空？
      2.数据库中id字段怎么更新？

6.选用框架
  开发目标：
  第一目标知识整合，用传统的SSH框架开发。
  第二目标线上使用，考虑高并发高可用系统分开开发。
传统SSH  Struts2+Spring+Hibernate
新版SSH  Spring+SpringMVC+Hibernate
可以试着用SSM再次开发
7.选用打开发工具
传统SSH：Myeclipse +jdk1.8+Mysql5.0以上+SVN代码管理
新版SSH:Eclispse +jdk1.8+Mysql5.0以上+Maven+SVN代码管理
8.用到的语言
JAVA
HTML
JS
9.界面开发:首次只需要框架。不要求美观。
1)前台界面
jsp  JS  java
要求：1.用户界面和用户中心界面
      2.首页以及各大模块页面
2)后台界面
要求：1.登录界面 
      2.一般后台系统使用的主界面
jsp  JS  java easayUI

实现目标：
1.javaee  javaSE基础巩固。
2.数据库的巩固。
3.框架的熟悉。
4.新知识的总结和移植。
5.整合能力的加强。
6.掌握正在项目开发流程是什么？
7.linux服务系统搭建，运维。
8.计划的制定，跟进和反馈。
9.英语能力提升。

开发步骤：（按照正规方式来写）
1.需求的编写（按照正式文档写）
2.项目进度计划的安排。
3.参考资料收集整理。（参考资料学习文档）
4.建立模型
5.环境搭建（开发环境，服务器运行环境（LIUNX采用虚拟机））
6.编码
7.调试
8.域名准备和服务器准备
9.正式上线。
10.总结，结案。
说明：1.在制定计划的时候，按小时计算。
      每次开发的实际时间也是按小时计算，每次都需要进行实际登记。
      2.首次开发的时候慢点没有问题，不能急于求成，主要是为了弄明白是怎么开发出来的。
      3.开发步骤可以调换。看项目的时候注意每个模块开发思路是什么，用到了什么知识点，是否掌握了，需要记笔记。
      4.在开发的时候每个模块预备需要什么知识点，是不是我们之前学习过。是否已经掌握了。

训了计划：
第一阶段：知识储备（偏重基础+框架+数据库使用）
第二阶段：知识加强。（偏重框架+高并发+服务器使用）
第三阶段:速度的提升。（外部扩展，智能家居方向连接）
第四阶段：准备重新接单。
总之：做过的事情都需要做好总结，下次不会花太多时间去处理。



总纲：
物联网+智能家居
分布：
1.平台建设
javaee  javase  框架  高并发相关处理 扩展接口  前端框架搭建开发
2.智能家居建设
单片机部分：
  硬件部分
  底层软件部分
arm部分：
  liunx系统部分
  系统部分（Qt + Android）
  驱动部分
基础：
c语言
C++语言
第一阶段；基础知识储备
 知识储备
 借用资料将知识点整理成表，一个一个消化
第二阶段：加强部分（开发）
第三阶段: 速度提升。

本周任务：
1.物联网智能平台系统知识点统计总表制作
2.权限管理系统开发需求
3.网络平台开发大纲编写
4.智能平台大纲编写
5.权限管理系统计划编写
6.智能管家员系统开发需求编写
7.智能管家员系统计划编写
8.开发学习日登记表
开始时间  结束时间  用时多少   动作    事项
  
  




